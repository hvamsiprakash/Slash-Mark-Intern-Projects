# -*- coding: utf-8 -*-
"""Blood Donation Forecast

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MY-QtJHq5KtzeWV7f2jBBOeae0SjCtka
"""

# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Load the dataset
data = pd.read_csv('transfusion.csv')

data.head()

#Checking for null values
data.isnull().sum()

# Splitting features and target variable
X = data.iloc[:, :-1]  # Features
y = data.iloc[:, -1]   # Target variable

# Splitting the dataset into the Training set and Test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Feature Scaling
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

# Model Training
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Accuracy Evaluation
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

# Prediction with user input
def predict_blood_donation(recency, frequency, monetary, time):
    input_data = np.array([[recency, frequency, monetary, time]])
    input_data = sc.transform(input_data)
    prediction = model.predict(input_data)
    return prediction

# Allowing user inputs to get results
recency = int(input("Enter Recency (months): "))
frequency = int(input("Enter Frequency (times): "))
monetary = int(input("Enter Monetary (c.c. blood): "))
time = int(input("Enter Time (months): "))

prediction = predict_blood_donation(recency, frequency, monetary, time)
if prediction[0] == 1:
    print("The individual is likely to donate blood.")
else:
    print("The individual is not likely to donate blood.")

